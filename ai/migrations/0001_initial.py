# Generated by Django 5.2.4 on 2025-07-08 07:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gemini_api_key', models.CharField(blank=True, max_length=200)),
                ('openai_api_key', models.CharField(blank=True, max_length=200)),
                ('max_requests_per_user_per_hour', models.IntegerField(default=100)),
                ('max_requests_per_user_per_day', models.IntegerField(default=1000)),
                ('default_temperature', models.FloatField(default=0.7)),
                ('default_max_tokens', models.IntegerField(default=2000)),
                ('enable_gemini', models.BooleanField(default=True)),
                ('enable_openai', models.BooleanField(default=True)),
                ('enable_fallback', models.BooleanField(default=True)),
                ('enable_usage_logging', models.BooleanField(default=True)),
                ('enable_cost_tracking', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Configuration',
                'verbose_name_plural': 'AI Configuration',
            },
        ),
        migrations.CreateModel(
            name='AIPromptTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('prompt_type', models.CharField(choices=[('quiz_generation', 'Quiz Generation'), ('question_analysis', 'Question Analysis'), ('content_summary', 'Content Summary'), ('difficulty_assessment', 'Difficulty Assessment')], max_length=50)),
                ('template', models.TextField(help_text='Use {placeholders} for variable content')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['prompt_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='QuizGenerationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_content', models.TextField()),
                ('content_type', models.CharField(default='text', max_length=50)),
                ('num_questions', models.IntegerField(default=10)),
                ('difficulty_level', models.CharField(default='medium', max_length=20)),
                ('question_types', models.JSONField(default=list)),
                ('ai_provider', models.CharField(default='gemini', max_length=20)),
                ('temperature', models.FloatField(default=0.7)),
                ('max_tokens', models.IntegerField(default=2000)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('generated_quiz_id', models.UUIDField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('processing_time_seconds', models.FloatField(default=0.0)),
                ('ai_response_time_ms', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('gemini', 'Google Gemini'), ('openai', 'OpenAI'), ('fallback', 'Fallback')], max_length=20)),
                ('request_type', models.CharField(choices=[('quiz_generation', 'Quiz Generation'), ('text_analysis', 'Text Analysis'), ('content_summary', 'Content Summary'), ('question_validation', 'Question Validation')], max_length=30)),
                ('input_text_length', models.IntegerField(default=0)),
                ('output_text_length', models.IntegerField(default=0)),
                ('response_time_ms', models.IntegerField(default=0)),
                ('tokens_used', models.IntegerField(default=0)),
                ('cost_estimate', models.DecimalField(decimal_places=6, default=0.0, max_digits=10)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('prompt_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai.aiprompttemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='ai_aiusagel_user_id_69aaea_idx'), models.Index(fields=['provider', 'timestamp'], name='ai_aiusagel_provide_ba4fe9_idx'), models.Index(fields=['request_type', 'timestamp'], name='ai_aiusagel_request_a788dd_idx')],
            },
        ),
    ]
